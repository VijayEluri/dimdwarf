<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.orfjackal.dimdwarf</groupId>
        <artifactId>dimdwarf</artifactId>
        <version>0.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>dimdwarf-end-to-end-test</artifactId>
    <packaging>jar</packaging>

    <name>dimdwarf-end-to-end-test</name>

    <properties>
        <test.sandbox>${project.build.directory}/test-deploy</test.sandbox>
        <test.deployment>${test.sandbox}/dimdwarf-${version}</test.deployment>
    </properties>

    <dependencies>

        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>dimdwarf-dist</artifactId>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.reddwarfserver.client</groupId>
            <artifactId>sgs-client</artifactId>
        </dependency>
        <dependency>
            <!-- sgs-client requires version 1.x, so we need to override
                 the version inherited from parent pom's dependencyManagement. -->
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-core</artifactId>
            <version>1.1.7</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

    </dependencies>

    <build>

        <!-- The tests will find out the locations of the sandbox
             and deployment directories from a properties file. -->

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>

            <!-- All tests in this module are run in the 'integration-test' phase.
                 Use the `mvn verify` command to build the project. -->

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Unpack the application's distribution package into the test sandbox.
                 This way the tests exercise the full end-to-end deployment cycle. -->

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!-- Clean any remains from previous integration test runs, hopefully
                                     before 'maven-dependency-plugin' unpacks the latest code there. -->
                                <delete dir="${test.sandbox}"/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-dist</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <!-- 'unpack-dependencies' is needed instead of 'unpack',
                                 see comments of http://jira.codehaus.org/browse/MNG-4233 -->
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>dimdwarf-dist</includeArtifactIds>
                            <outputDirectory>${test.sandbox}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
